{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\coding\\\\kaysensurfboards\\\\components\\\\splash.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport splashSrc from './splash.jpg';\n\nvar Splash = /*#__PURE__*/function (_React$Component) {\n  _inherits(Splash, _React$Component);\n\n  function Splash(props) {\n    var _this;\n\n    _classCallCheck(this, Splash);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Splash).call(this, props));\n    _this.state = {\n      imgWidth: 0,\n      imgHeight: 0,\n      width: 0,\n      height: 0,\n      horizontal: 0\n    };\n    _this.updateDim = _this.updateDim.bind(_assertThisInitialized(_this));\n    _this.onImgLoad = _this.onImgLoad.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Splash, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateDim();\n      window.addEventListener('resize', this.updateDim);\n    }\n  }, {\n    key: \"updateDim\",\n    value: function updateDim() {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n\n      if (this.state.width / this.state.height < this.state.imgWidth / this.state.imgHeight) {\n        this.setState({\n          horizontal: true\n        });\n      } else {\n        this.setState({\n          horizontal: false\n        });\n      }\n    }\n  }, {\n    key: \"onImgLoad\",\n    value: function onImgLoad(_ref) {\n      var img;\n      return _regeneratorRuntime.async(function onImgLoad$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              img = _ref.target;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(this.setState({\n                imgHeight: img.offsetHeight,\n                imgWidth: img.offsetWidth\n              }));\n\n            case 3:\n              this.updateDim();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, _Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        style: splash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: splashImgContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        style: splashText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Alex Salazar\"), __jsx(\"img\", {\n        onLoad: this.onImgLoad,\n        style: this.state.horizontal ? {\n          splashImg1: splashImg1\n        } : {\n          splashImg2: splashImg2\n        },\n        src: splashSrc,\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Splash;\n}(React.Component);\n\nvar splash = {\n  minHeight: \"75vh\",\n  width: \"100%\"\n};\nvar splashImgContainer = {\n  marginTop: \"10vh\",\n  maxHeight: \"20\",\n  height: \"100vh\",\n  overflow: \"hidden\",\n  position: \"relative\",\n  textAlign: \"center\"\n};\nvar splashText = {\n  top: \"30%\",\n  width: \"100%\",\n  left: 0,\n  color: \"white\",\n  position: \"absolute\",\n  //fontFamily:  $fontFamily,\n  fontSize: \"10vw\"\n};\nvar splashImg1 = {\n  height: \"1000\",\n  width: \"auto\"\n};\nvar splashImg2 = {\n  height: \"auto\",\n  width: 1000\n};\nexport default Splash;","map":{"version":3,"sources":["C:/Users/Alex/Documents/coding/kaysensurfboards/components/splash.js"],"names":["React","splashSrc","Splash","props","state","imgWidth","imgHeight","width","height","horizontal","updateDim","bind","onImgLoad","window","addEventListener","setState","innerWidth","innerHeight","img","target","offsetHeight","offsetWidth","splash","splashImgContainer","splashText","splashImg1","splashImg2","Component","minHeight","marginTop","maxHeight","overflow","position","textAlign","top","left","color","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport splashSrc from './splash.jpg';\r\n\r\nclass Splash extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      imgWidth:0,\r\n      imgHeight:0,\r\n      width:0,\r\n      height:0,\r\n      horizontal:0\r\n    }\r\n    this.updateDim = this.updateDim.bind(this);\r\n    this.onImgLoad = this.onImgLoad.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updateDim();\r\n    window.addEventListener('resize', this.updateDim);\r\n  }\r\n\r\n  updateDim(){\r\n    this.setState({width:window.innerWidth,height:window.innerHeight})\r\n    if(this.state.width/this.state.height < this.state.imgWidth/this.state.imgHeight){\r\n      this.setState({horizontal:true});\r\n    }else {\r\n      this.setState({horizontal:false});\r\n    }\r\n  }\r\n\r\n  async onImgLoad({target:img}) {\r\n    await this.setState({imgHeight: img.offsetHeight, imgWidth: img.offsetWidth});\r\n    this.updateDim();\r\n  }\r\n  render(){\r\n    return (\r\n      <div style = {splash}>\r\n        <div style = {splashImgContainer}>\r\n          <a style = {splashText}>{\"Alex Salazar\"}</a>\r\n          <img onLoad = {this.onImgLoad} style = {this.state.horizontal?{splashImg1}:{splashImg2}} src = {splashSrc} alt=\"Logo\"></img> \r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n}\r\nconst splash = {\r\n    minHeight: \"75vh\",\r\n    width:\"100%\",\r\n  }\r\nconst splashImgContainer =  {\r\n    marginTop:\"10vh\",\r\n    maxHeight:\"20\",\r\n    height:\"100vh\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    textAlign: \"center\",\r\n  }\r\nconst splashText ={\r\n    top:\"30%\",\r\n    width:\"100%\",\r\n    left:0,\r\n    color: \"white\",\r\n    position: \"absolute\",\r\n    //fontFamily:  $fontFamily,\r\n      fontSize: \"10vw\",\r\n  }\r\nconst splashImg1 ={\r\n    height:\"1000\",\r\n    width:\"auto\",\r\n  }\r\nconst splashImg2= {\r\n    height:\"auto\",\r\n    width:1000,\r\n  }\r\nexport default Splash;\r\n"]},"metadata":{},"sourceType":"module"}