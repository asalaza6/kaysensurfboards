{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport splashSrc from '../public/splashpic.jpg';\n\nclass Splash extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgWidth: 0,\n      imgHeight: 0,\n      width: 0,\n      height: 0,\n      horizontal: 0\n    };\n    this.updateDim = this.updateDim.bind(this);\n    this.onImgLoad = this.onImgLoad.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateDim();\n    window.addEventListener('resize', this.updateDim);\n  }\n\n  updateDim() {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n\n    if (this.state.width / this.state.height < this.state.imgWidth / this.state.imgHeight) {\n      this.setState({\n        horizontal: true\n      });\n    } else {\n      this.setState({\n        horizontal: false\n      });\n    }\n  }\n\n  async onImgLoad({\n    target: img\n  }) {\n    await this.setState({\n      imgHeight: img.offsetHeight,\n      imgWidth: img.offsetWidth\n    });\n    this.updateDim();\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      style: splash\n    }, __jsx(\"div\", {\n      style: splashImgContainer\n    }, __jsx(\"img\", {\n      onLoad: this.onImgLoad,\n      style: this.state.horizontal ? {\n        splashImg1\n      } : {\n        splashImg2\n      },\n      src: splashSrc,\n      alt: \"Logo\"\n    }))));\n  }\n\n} //\n\n\nconst splash = {\n  minHeight: \"75vh\",\n  width: \"100%\"\n};\nconst splashImgContainer = {\n  height: \"100vh\",\n  overflow: \"hidden\",\n  position: \"relative\",\n  textAlign: \"center\",\n  justifyContent: \"center\"\n};\nconst splashText = {\n  margin: \"auto\",\n  maxWidth: 1000,\n  border: '1px solid #DDD',\n  textAlign: \"center\",\n  position: \"relative\",\n  //fontFamily:  $fontFamily,\n  fontSize: 30\n};\nconst splashImg1 = {\n  height: \"100%\",\n  width: \"auto\"\n};\nconst splashImg2 = {\n  height: \"auto\",\n  width: \"100%\"\n};\nexport default Splash;","map":null,"metadata":{},"sourceType":"module"}